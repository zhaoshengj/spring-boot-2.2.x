/*
 * Copyright 2012-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This class is generated by jOOQ
 */
package smoketest.jooq.domain;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "https://www.jooq.org",
		"jOOQ version:3.8.2" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 217498103;

	/**
	 * The reference instance of <code>PUBLIC</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * The table <code>PUBLIC.LANGUAGE</code>.
	 */
	public final Language LANGUAGE = Language.LANGUAGE;

	/**
	 * The table <code>PUBLIC.AUTHOR</code>.
	 */
	public final Author AUTHOR = Author.AUTHOR;

	/**
	 * The table <code>PUBLIC.BOOK</code>.
	 */
	public final Book BOOK = Book.BOOK;

	/**
	 * The table <code>PUBLIC.BOOK_STORE</code>.
	 */
	public final BookStore BOOK_STORE = BookStore.BOOK_STORE;

	/**
	 * The table <code>PUBLIC.BOOK_TO_BOOK_STORE</code>.
	 */
	public final BookToBookStore BOOK_TO_BOOK_STORE = BookToBookStore.BOOK_TO_BOOK_STORE;

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("PUBLIC", null);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Catalog getCatalog() {
		return DefaultCatalog.DEFAULT_CATALOG;
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(Language.LANGUAGE, Author.AUTHOR, Book.BOOK,
				BookStore.BOOK_STORE, BookToBookStore.BOOK_TO_BOOK_STORE);
	}

}
